Prueba JS 
Escribe una función que recibe una string como parámetro y devuelve true si es un palíndromo o false en caso contrario. ok stage2
Escribe una función que recibe un array de números enteros como parámetro y devuelve todos los múltiplos de 7. ok stage2
Ejemplo de array de números enteros: 
const numbers = [1, 8, 7, 49, 23, 21, 12, 19, 5, 73, 63, 9, 14]; 
Dada la siguiente declaración de objetos: 
const obj = { 
id: "AB-001", 
value: 1 
} 
const obj2 = { 
id: "AB-001", 
value: 1 
} 
const obj3 = obj; 
Selecciona la respuesta correcta: 
Los 3 objetos son iguales 
obj2 es distinto a obj y obj3 (Esta aunque ninguno de los objetos es igual entre si)
La asignación de obj a obj3 no es válida 
Ninguna es correcta 
Teniendo en cuenta la declaración de objetos anterior: 
obj.value = 3;
Selecciona la respuesta correcta 
La asignación de un nuevo valor al objeto obj causará un error (Esta Por que es constante)
La asignación es correcta y obj3.value sigue valiendo 1 
obj y obj3 son iguales 
Ninguna es correcta 
Escribe una función que recibe un objeto persona como parámetro y devuelve otro objeto persona con solo su nombre y edad . 
Ejemplo de objeto persona: 
{ 
"name": "John", 
"surname": "Doe", 
"age": "30", 
"country": "Spain", 
"city": "Madrid", 
"employed": "true", 
"dni": "00000000A", 
} 
Escribe una función que recibe un objeto persona como parámetro y devuelve todas sus propiedades menos employed y dni . 
Modifica el código a continuación que realiza una llamada GET a una API para recuperar una lista de tareas usando async/await . 
(() => { 
const getTodos = () => { 
return fetch('https://jsonplaceholder.typicode.com/todos/') 
.then(response => response.json()) 
.then(json => console.log(json)) 
.catch(error => console.log(error)); 
} 
getTodos(); 
})();